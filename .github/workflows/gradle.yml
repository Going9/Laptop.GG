name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Run Gradle Build
        run: chmod +x gradlew
        working-directory: LaptopGG

      - name: Run Gradle Build
        run: ./gradlew build
        working-directory: LaptopGG

      - name: Build Docker Image (Blue)
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/laptop-gg:blue .
        working-directory: LaptopGG

      - name: Build Docker Image (Green)
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/laptop-gg:green .
        working-directory: LaptopGG

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push Docker Image to Docker Hub (Blue)
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/laptop-gg:blue
        working-directory: LaptopGG

      - name: Push Docker Image to Docker Hub (Green)
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/laptop-gg:green
        working-directory: LaptopGG

  deploy:
    needs: build
    runs-on: self-hosted

    steps:
      - name: Docker Login
        run: echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Pull Blue Image
        run: echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker pull ${{ secrets.DOCKERHUB_USERNAME }}/laptop-gg:blue

      - name: Pull Green Image
        run: echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker pull ${{ secrets.DOCKERHUB_USERNAME }}/laptop-gg:green

      - name: Deploy Blue Container
        run: |
          echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker stop laptop-gg-green || true
          echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker rm laptop-gg-green || true
          echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker run --name laptop-gg-blue --rm -d -p 8081:8080 ${{ secrets.DOCKERHUB_USERNAME }}/laptop-gg:blue

      - name: Deploy Green Container
        run: |
          echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker stop laptop-gg-blue || true
          echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker rm laptop-gg-blue || true
          echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker run --name laptop-gg-green --rm -d -p 8082:8080 ${{ secrets.DOCKERHUB_USERNAME }}/laptop-gg:green

      - name: Clean Up Old Images
        run: echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker system prune -f
